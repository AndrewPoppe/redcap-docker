services:
  redcap:
    image: dzdde/redcap-docker
    environment:
      DB_PORT: 3306
      DB_HOSTNAME: db
      DB_NAME: redcap
      DB_USERNAME: redcap
      DB_PASSWORD: redcap123
      # Do not reuse this example DB_SALT
      DB_SALT: d369a86842347f7e3e40a3ec64b9f9d950bdfde05beba3a61da69bb1fb28dcea9152fbf723889181a9bd9a97f34b90faf17a
      REDCAP_INSTALL_ENABLE: true

      APPLY_RCCONF_VARIABLES: true
      RCCONF_institution: "Weyland-Yutani Corporation"
      RCCONF_homepage_contact: "Karl Bishop "
      RCCONF_homepage_contact_email: "k.bishop@wyyu.earth"
      # Name of REDCap Administrator
      RCCONF_project_contact_name: Colette Ferro
      RCCONF_project_contact_email: c.ferro@wyyu.earth
      # Set authentification to be table based.
      RCCONF_auth_meth_global: table
      # suspend public default user
      REDCAP_SUSPEND_SITE_ADMIN: true
      # enable user provisioning
      ENABLE_USER_PROV: true
      # rewrite users on every boot
      USER_PROV_OVERWRITE_EXISTING: true
      # define users via env vars.
      USER_PROV_1: '{"username": "admin","user_firstname": "admin","user_lastname": "user","user_email": "andrew.poppe@yale.edu","password": "password","admin_rights": 1,"super_user": 1,"account_manager": 1,"access_system_config": 1,"access_system_upgrade": 1,"access_external_module_install": 1,"access_admin_dashboards": 1}'
      USER_PROV_2: '{"username": "alice","user_firstname": "Alice","user_lastname": "user","user_email": "andrew.poppe@yale.edu","password": "password"}'
      USER_PROV_3: '{"username": "bob","user_firstname": "Bob","user_lastname": "user","user_email": "andrew.poppe@yale.edu","password": "password"}'
      USER_PROV_4: '{"username": "carol","user_firstname": "Carol","user_lastname": "user","user_email": "andrew.poppe@yale.edu","password": "password"}'
      USER_PROV_5: '{"username": "dan","user_firstname": "Dan","user_lastname": "user","user_email": "andrew.poppe@yale.edu","password": "password"}'
    volumes:
      # our user data via an yaml file
      #- ./users.yaml:/opt/redcap-docker/users
      # Here you need to mount your copy of the redcap source/php script.
      - ./data/redcap:/var/www/html
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8098:80"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  redcap-cron:
    image: dzdde/redcap-docker
    environment:
      CRON_MODE: true
      CRON_INTERVAL: "*/1 * * * *"
      DB_PORT: 3306
      DB_HOSTNAME: db
      DB_NAME: redcap
      DB_USERNAME: redcap
      DB_PASSWORD: redcap123
      # Do not reuse this example DB_SALT
      DB_SALT: d369a86842347f7e3e40a3ec64b9f9d950bdfde05beba3a61da69bb1fb28dcea9152fbf723889181a9bd9a97f34b90faf17a
      # # Email conf
      # MSMTP_from: redcap-system@wy-corp.earth
      # MSMTP_host: mail.your-server.de
      # MSMTP_port: 587
      # MSMTP_auth: on
      # MSMTP_user: redcap-system@wy-corp.earth
      # MSMTP_password: mytotalsecretpassword
      # MSMTP_tls: on
      # MSMTP_tls_starttls: on
      # MSMTP_syslog: on
      # RCCONF_from_email: redcap-system@wy-corp.earth
    volumes:
      - ./data/redcap/redcap:/var/www/html
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  db:
    image: mysql:lts
    restart: always
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    volumes:
      - ./data/db:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=redcaproot123
      - MYSQL_DATABASE=redcap
      - MYSQL_USER=redcap
      - MYSQL_PASSWORD=redcap123
      - TZ=UTC
    healthcheck:
      test: "/usr/bin/mysql -u $$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE --execute \"SHOW TABLES;\""
      timeout: 3s
      interval: 5s
      retries: 4
    command:
      # Per REDCap Recommendations
      - --max_allowed_packet=128M
      # If you have a larger development database, you may want to increase this value:
      # Default is 128MB (134217728) - I'm upping it to 512MB
      - --innodb_buffer_pool_size=536870912
      # 2x default
      # sort_buffer_size=524288
      - --sort_buffer_size=1024K
      # Default
      #read_rnd_buffer_size=262144
      - --read_rnd_buffer_size=1024K
      # By default we only accept connections from localhost but we want to allow connections from anywhere!
      # bind-address=127.0.0.1
      - --bind-address=0.0.0.0
      # MAKE SEPARATE FILES PER TABLE
      - --innodb_file_per_table=1
      # Disabling symbolic-links is recommended to prevent assorted security risks
      - --symbolic-links=0
      # SLOW QUERY LOGGING
      - --log_output=FILE
      - --slow_query_log=0
      - --slow_query_log_file=/var/log/mysql_slow.log
      - --long_query_time=2.000
      - --log-queries-not-using-indexes=0
